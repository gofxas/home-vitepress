import{_ as e,c as o,o as a,a1 as t}from"./chunks/framework.BdbYcYPl.js";const r="/assets/gettoken.COB1N8oZ.png",i="/assets/gettoken2.DCd4VOnr.png",d="/assets/getzoneid1.BQLxVpw6.png",l="/assets/getzoneid2.B5VclZFg.png",n="/assets/getrecordid1.N2sQi_XD.png",s="/assets/getrecordid2.BIPsoyz2.png",c="/assets/getrecordid.DUEmvahd.png",P=JSON.parse('{"title":"Cloudflare DDNS 设置教程","description":"","frontmatter":{},"headers":[],"relativePath":"代码/cloudflare 设置DDNS.md","filePath":"代码/cloudflare 设置DDNS.md"}'),h={name:"代码/cloudflare 设置DDNS.md"},p=t('<h1 id="cloudflare-ddns-设置教程" tabindex="-1">Cloudflare DDNS 设置教程 <a class="header-anchor" href="#cloudflare-ddns-设置教程" aria-label="Permalink to &quot;Cloudflare DDNS 设置教程&quot;">​</a></h1><blockquote><p>本教程默认你已经注册了 Cloudflare，拥有了一个域名。</p></blockquote><h2 id="项目地址" tabindex="-1">项目地址 <a class="header-anchor" href="#项目地址" aria-label="Permalink to &quot;项目地址&quot;">​</a></h2><p><a href="https://github.com/gofxas/cloudflare-ddns" target="_blank" rel="noreferrer">cloudflare-ddns</a></p><h2 id="版本选择与工作原理" tabindex="-1">版本选择与工作原理 <a class="header-anchor" href="#版本选择与工作原理" aria-label="Permalink to &quot;版本选择与工作原理&quot;">​</a></h2><p>提供了 nodejs 版本脚本和 python 版本的脚本。工作原理就是设备访问 <code>https://ipify.org/</code>获取到本机 IP 地址 再更新到 DNS 记录。没有独立 IP 地址是没办法访问的。</p><h2 id="依赖安装" tabindex="-1">依赖安装 <a class="header-anchor" href="#依赖安装" aria-label="Permalink to &quot;依赖安装&quot;">​</a></h2><p>工作之前需要安装依赖 参考 package.json 或者 requirements.txt 内的依赖进行安装。</p><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><ul><li>打开 <code>nodejs</code>或<code>python</code>文件夹，对应两个语言版本。找到 ddns.config 文件 。</li><li>需要先填写 token 和 zone_identifier 两个参数。</li></ul><h3 id="如何创建-token" tabindex="-1">如何创建 token? <a class="header-anchor" href="#如何创建-token" aria-label="Permalink to &quot;如何创建 token?&quot;">​</a></h3><ol><li>登录进入控制台后 点击右上角头像出现下拉菜单。</li><li>选择 <code>我的个人资料 （My Profile）</code>选项进入。</li><li>进入之后选择左侧 <code>API令牌（API Tokens）</code> 进入。</li><li>进入用户 API 令牌（User API Tokens）界面之后，找到创建令牌（create token）按钮并且点击进入。</li><li>选择 Create Custom Token 并开始。</li><li>进行如下配置 ，一定要给到编辑和读取资源的权限。区域选择要操作的域名或者账户。 <img src="'+r+'" alt=""></li><li>保存之后会展示一次 token 需要自己妥善保存。以后不会再展示了。 <img src="'+i+'" alt=""></li></ol><h3 id="如何获取-zone-identifier-参数" tabindex="-1">如何获取 zone_identifier 参数？ <a class="header-anchor" href="#如何获取-zone-identifier-参数" aria-label="Permalink to &quot;如何获取 zone_identifier 参数？&quot;">​</a></h3><ol><li>主页选择需要获取的 zone 点击进入。 <img src="'+d+'" alt=""></li><li>滑到页面下方，注意看右侧会展示 zone_id，单击复制即可。 <img src="'+l+'" alt=""></li></ol><h3 id="获取-recordid" tabindex="-1">获取 recordid？ <a class="header-anchor" href="#获取-recordid" aria-label="Permalink to &quot;获取 recordid？&quot;">​</a></h3><p>进入 ddns 的主程序（ddns.js 或者 ddns.py）。注释掉 <code>upload_ip()</code> 相关的调用代码 并启用 <code>getDnsRecords()</code></p><p><img src="'+n+'" alt=""><img src="'+s+'" alt=""></p><p>准备完成之后 执行一次,控制台打印返回结果。找到要进行操作的 dns 记录，并复制出来 ID 这个 ID 就是需要的 recordid。<br><img src="'+c+'" alt=""></p><h2 id="执行代码" tabindex="-1">执行代码 <a class="header-anchor" href="#执行代码" aria-label="Permalink to &quot;执行代码&quot;">​</a></h2><p>nodejs 可以使用 pm2 管理，linux 下可以把 pm2 添加到 系统守护进程开机自己启动。python 的如何添加守护进程还不会，可以告诉我一下。</p>',20),_=[p];function u(f,m,g,k,b,D){return a(),o("div",null,_)}const x=e(h,[["render",u]]);export{P as __pageData,x as default};
